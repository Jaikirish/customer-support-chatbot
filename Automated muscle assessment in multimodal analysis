{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Jaikirish/customer-support-chatbot/blob/main/Automated%20muscle%20assessment%20in%20multimodal%20analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "36YDSXBywdlT",
        "outputId": "31c8d6b5-c5a2-446a-b3f0-56dd1a442a5f"
      },
      "id": "36YDSXBywdlT",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6d781d81-2a47-48d6-acc2-3a294e8170a1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6d781d81-2a47-48d6-acc2-3a294e8170a1",
        "outputId": "5c5b26ff-b723-4d9e-ffb1-dfafe856c727"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of CSV files in '/content/drive/My Drive/archive (4)/Abnormal': 33\n",
            "Number of CSV files in '/content/drive/My Drive/archive (4)/normal': 33\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "def count_csv_files(folder_path):\n",
        "    if not os.path.exists(folder_path):\n",
        "        print(f\"Folder '{folder_path}' does not exist.\")\n",
        "        return 0\n",
        "\n",
        "    csv_files = [file for file in os.listdir(folder_path) if file.endswith('.csv')]\n",
        "    return len(csv_files)\n",
        "folder1 = '/content/drive/My Drive/archive (4)/Abnormal'\n",
        "folder2 = '/content/drive/My Drive/archive (4)/normal'\n",
        "count_folder1 = count_csv_files(folder1)\n",
        "count_folder2 = count_csv_files(folder2)\n",
        "print(f\"Number of CSV files in '{folder1}': {count_folder1}\")\n",
        "print(f\"Number of CSV files in '{folder2}': {count_folder2}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5d2a29c8-a1a3-4bd0-9da8-4a2c72b51d7f",
      "metadata": {
        "id": "5d2a29c8-a1a3-4bd0-9da8-4a2c72b51d7f"
      },
      "source": [
        "# DATA PREPROCESSING"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "713a5b8d-7b3c-46f2-bb1d-7a3931250f78",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "713a5b8d-7b3c-46f2-bb1d-7a3931250f78",
        "outputId": "7dcc469d-8346-4ec0-c87f-1acfeea108ab"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Merged CSV file saved to: /content/drive/My Drive/archive (4)/Merged_Abnormal\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "abnormal_folder = r'/content/drive/My Drive/archive (4)/Abnormal'\n",
        "output_file = r\"/content/drive/My Drive/archive (4)/Merged_Abnormal\"\n",
        "dataframes = []\n",
        "if not os.path.exists(abnormal_folder):\n",
        "    print(f\"Folder '{abnormal_folder}' does not exist.\")\n",
        "else:\n",
        "\n",
        "    for file in os.listdir(abnormal_folder):\n",
        "        if file.endswith('.csv'):\n",
        "            file_path = os.path.join(abnormal_folder, file)\n",
        "\n",
        "            df = pd.read_csv(file_path)\n",
        "            dataframes.append(df)\n",
        "\n",
        "    if dataframes:\n",
        "        merged_df = pd.concat(dataframes, ignore_index=True)\n",
        "        merged_df.to_csv(output_file, index=False)\n",
        "        print(f\"Merged CSV file saved to: {output_file}\")\n",
        "    else:\n",
        "        print(f\"No CSV files found in '{abnormal_folder}'.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d21fe623-c501-4b55-b7ea-000090fa5396",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d21fe623-c501-4b55-b7ea-000090fa5396",
        "outputId": "871f92a2-3ccb-437a-fba7-6007afa0c30f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of any one CSV file in 'Abnormal' folder: (25302, 5)\n",
            "Shape of the merged CSV file: (850515, 7)\n"
          ]
        }
      ],
      "source": [
        "\n",
        "if dataframes:\n",
        "\n",
        "    first_file_shape = dataframes[0].shape\n",
        "    print(f\"Shape of any one CSV file in 'Abnormal' folder: {first_file_shape}\")\n",
        "else:\n",
        "    print(\"No CSV files were loaded from the 'Abnormal' folder.\")\n",
        "if os.path.exists(output_file):\n",
        "    merged_df = pd.read_csv(output_file)\n",
        "    merged_file_shape = merged_df.shape\n",
        "    print(f\"Shape of the merged CSV file: {merged_file_shape}\")\n",
        "else:\n",
        "    print(\"The merged CSV file does not exist.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9a75243e-8a2e-42af-a6b3-d278e3fe3eee",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9a75243e-8a2e-42af-a6b3-d278e3fe3eee",
        "outputId": "5dc216fd-4475-4e06-f610-34e0f405ece6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Recto Femoral', 'Biceps Femoral', 'Vasto Medial', 'EMG Semitendinoso',\n",
            "       'Flexo-Extension', 'Vasto Medial ', 'Unnamed: 5'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "df_abnormal = pd.read_csv(r\"/content/drive/My Drive/archive (4)/Merged_Abnormal\")\n",
        "print(df_abnormal.columns)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0bc8d980-b86e-445f-9111-f3412494e6f0",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "0bc8d980-b86e-445f-9111-f3412494e6f0",
        "outputId": "d9cc6ea1-cb98-4ec7-8a0a-c33c19a92bf3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
              "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
              "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
              "2        -0.0008          0.0000       -0.0030             0.0007   \n",
              "3         0.0000          0.0000       -0.0008            -0.0008   \n",
              "4        -0.0015          0.0000        0.0007            -0.0015   \n",
              "\n",
              "   Flexo-Extension  Vasto Medial   Unnamed: 5  \n",
              "0             78.7            NaN         NaN  \n",
              "1             78.5            NaN         NaN  \n",
              "2             78.7            NaN         NaN  \n",
              "3             78.6            NaN         NaN  \n",
              "4             78.7            NaN         NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b89426a-eb63-4ff2-acf3-4862d563e96d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recto Femoral</th>\n",
              "      <th>Biceps Femoral</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>EMG Semitendinoso</th>\n",
              "      <th>Flexo-Extension</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0007</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>78.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.0008</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>-0.0030</td>\n",
              "      <td>0.0007</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>78.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.0015</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0007</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b89426a-eb63-4ff2-acf3-4862d563e96d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5b89426a-eb63-4ff2-acf3-4862d563e96d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5b89426a-eb63-4ff2-acf3-4862d563e96d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1379f756-b146-437a-a8a9-9969412c0516\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1379f756-b146-437a-a8a9-9969412c0516')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1379f756-b146-437a-a8a9-9969412c0516 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_abnormal"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "df_abnormal.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "90025c6c-bcff-4f90-9df0-06f575a32440",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "90025c6c-bcff-4f90-9df0-06f575a32440",
        "outputId": "d89d0864-3b50-4208-9b9a-0fb25b049bbd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unnamed: 5      799010\n",
            "Vasto Medial    144605\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "nan_counts = df_abnormal[['Unnamed: 5', 'Vasto Medial']].isna().sum()\n",
        "print(nan_counts)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "63e890a7-7914-47d9-9180-bbb33d8ae742",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "63e890a7-7914-47d9-9180-bbb33d8ae742",
        "outputId": "ac62f1d8-6d1f-4729-b683-90c47cf84684"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  \n",
            "0             78.7           0.0         0.0  \n",
            "1             78.5           0.0         0.0  \n",
            "2             78.7           0.0         0.0  \n",
            "3             78.6           0.0         0.0  \n",
            "4             78.7           0.0         0.0  \n"
          ]
        }
      ],
      "source": [
        "df_abnormal.columns = df_abnormal.columns.str.strip()\n",
        "df_abnormal[['Unnamed: 5', 'Vasto Medial']] = df_abnormal[['Unnamed: 5', 'Vasto Medial']].fillna(0)\n",
        "print(df_abnormal.head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4c221c8e-7f62-40a9-826f-93ff397ed116",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4c221c8e-7f62-40a9-826f-93ff397ed116",
        "outputId": "f89dd9df-1f83-4c85-d517-5998c253541c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  label  \n",
            "0             78.7           0.0         0.0      1  \n",
            "1             78.5           0.0         0.0      1  \n",
            "2             78.7           0.0         0.0      1  \n",
            "3             78.6           0.0         0.0      1  \n",
            "4             78.7           0.0         0.0      1  \n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(850515, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ],
      "source": [
        "df_abnormal['label'] = 1\n",
        "print(df_abnormal.head())\n",
        "df_abnormal.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "af38598f-184d-48dd-962e-f4eea1d90d12",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "af38598f-184d-48dd-962e-f4eea1d90d12",
        "outputId": "5301d27a-bfd9-4285-cf40-df922bf002a1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Merged CSV file saved to: /content/drive/My Drive/archive (4)/Merged_normal.csv\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "normal_folder = r\"/content/drive/My Drive/archive (4)/normal\"\n",
        "output_file = r\"/content/drive/My Drive/archive (4)/Merged_normal\"\n",
        "dataframes = []\n",
        "if not os.path.exists(abnormal_folder):\n",
        "    print(f\"Folder '{abnormal_folder}' does not exist.\")\n",
        "else:\n",
        "    for file in os.listdir(abnormal_folder):\n",
        "        if file.endswith('.csv'):\n",
        "            file_path = os.path.join(abnormal_folder, file)\n",
        "            # Read the CSV file and append to the list\n",
        "            df = pd.read_csv(file_path)\n",
        "            dataframes.append(df)\n",
        "    if dataframes:\n",
        "        merged_df = pd.concat(dataframes, ignore_index=True)\n",
        "        merged_df.to_csv(output_file, index=False)\n",
        "        print(f\"Merged CSV file saved to: {output_file}\")\n",
        "    else:\n",
        "        print(f\"No CSV files found in '{abnormal_folder}'.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c2b43f3a-9eea-44da-8630-a63f0ba3d5ec",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c2b43f3a-9eea-44da-8630-a63f0ba3d5ec",
        "outputId": "68a45755-f28c-467d-dd34-307043af14bd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shape of any one CSV file in 'normal' folder: (25302, 5)\n",
            "Shape of the merged CSV file: (850515, 7)\n"
          ]
        }
      ],
      "source": [
        "if dataframes:\n",
        "    first_file_shape = dataframes[0].shape\n",
        "    print(f\"Shape of any one CSV file in 'normal' folder: {first_file_shape}\")\n",
        "else:\n",
        "    print(\"No CSV files were loaded from the 'normal' folder.\")\n",
        "if os.path.exists(output_file):\n",
        "    merged_df = pd.read_csv(output_file)\n",
        "    merged_file_shape = merged_df.shape\n",
        "    print(f\"Shape of the merged CSV file: {merged_file_shape}\")\n",
        "else:\n",
        "    print(\"The merged CSV file does not exist.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6bbd0bfe-ba59-4d4a-828c-29220a7a9650",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6bbd0bfe-ba59-4d4a-828c-29220a7a9650",
        "outputId": "63a14498-08ab-4ff0-8656-5183ba09cce6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Recto Femoral', 'Biceps Femoral', 'Vasto Medial', 'EMG Semitendinoso',\n",
            "       'Flexo-Extension', 'Vasto Medial ', 'Unnamed: 5'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "df_normal = pd.read_csv(r\"/content/drive/My Drive/archive (4)/Merged_normal.csv\")\n",
        "print(df_normal.columns)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "90fa8d62-b475-4b46-8b58-8b1ea4894c0e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "90fa8d62-b475-4b46-8b58-8b1ea4894c0e",
        "outputId": "a224b609-a950-4c52-d101-5ac9b4266122"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
              "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
              "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
              "2        -0.0008          0.0000       -0.0030             0.0007   \n",
              "3         0.0000          0.0000       -0.0008            -0.0008   \n",
              "4        -0.0015          0.0000        0.0007            -0.0015   \n",
              "\n",
              "   Flexo-Extension  Vasto Medial   Unnamed: 5  \n",
              "0             78.7            NaN         NaN  \n",
              "1             78.5            NaN         NaN  \n",
              "2             78.7            NaN         NaN  \n",
              "3             78.6            NaN         NaN  \n",
              "4             78.7            NaN         NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41199030-0842-4a49-bad6-09d3ecc210a7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recto Femoral</th>\n",
              "      <th>Biceps Femoral</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>EMG Semitendinoso</th>\n",
              "      <th>Flexo-Extension</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0007</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>78.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.0008</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>-0.0030</td>\n",
              "      <td>0.0007</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>78.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.0015</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0007</td>\n",
              "      <td>-0.0015</td>\n",
              "      <td>78.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41199030-0842-4a49-bad6-09d3ecc210a7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-41199030-0842-4a49-bad6-09d3ecc210a7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-41199030-0842-4a49-bad6-09d3ecc210a7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a17a4e54-b1cb-4f69-9b47-62d91e40fcf9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a17a4e54-b1cb-4f69-9b47-62d91e40fcf9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a17a4e54-b1cb-4f69-9b47-62d91e40fcf9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_normal"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "df_normal.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a9a73a48-3b94-4ca0-a3c1-82722ca9ab2f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a9a73a48-3b94-4ca0-a3c1-82722ca9ab2f",
        "outputId": "fd5f2252-34a4-4682-a966-1fe532df87dc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unnamed: 5      799010\n",
            "Vasto Medial    144605\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "nan_counts = df_normal[['Unnamed: 5', 'Vasto Medial']].isna().sum()\n",
        "print(nan_counts)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "817fa434-e45a-4ba2-a078-3031e34376b4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "817fa434-e45a-4ba2-a078-3031e34376b4",
        "outputId": "a3ca59cf-6c98-4fa2-b6a0-7de4611f2116"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  \n",
            "0             78.7           0.0         0.0  \n",
            "1             78.5           0.0         0.0  \n",
            "2             78.7           0.0         0.0  \n",
            "3             78.6           0.0         0.0  \n",
            "4             78.7           0.0         0.0  \n"
          ]
        }
      ],
      "source": [
        "df_normal.columns = df_normal.columns.str.strip()\n",
        "df_normal[['Unnamed: 5', 'Vasto Medial']] = df_normal[['Unnamed: 5', 'Vasto Medial']].fillna(0)\n",
        "\n",
        "print(df_normal.head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d9b329dc-94ce-40b7-b66b-b62234a01b69",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d9b329dc-94ce-40b7-b66b-b62234a01b69",
        "outputId": "40d1a634-2149-4493-84ed-7620371bc0b4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  label  \n",
            "0             78.7           0.0         0.0      0  \n",
            "1             78.5           0.0         0.0      0  \n",
            "2             78.7           0.0         0.0      0  \n",
            "3             78.6           0.0         0.0      0  \n",
            "4             78.7           0.0         0.0      0  \n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(850515, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "df_normal['label'] = 0\n",
        "print(df_normal.head())\n",
        "df_normal.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "61e8f453-505e-4492-b596-0fb04d32c6ba",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "61e8f453-505e-4492-b596-0fb04d32c6ba",
        "outputId": "acf6335e-216b-4c36-8668-64438d907806"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "label\n",
            "0    850515\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "\n",
        "label_counts = df_normal['label'].value_counts()\n",
        "print(label_counts)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "647e8895-d542-40d7-8cea-ec1da3b12faa",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "647e8895-d542-40d7-8cea-ec1da3b12faa",
        "outputId": "fbf1e6fb-4d2e-4dfd-de4f-5611c33b657c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  label  \n",
            "0             78.7           0.0         0.0      1  \n",
            "1             78.5           0.0         0.0      1  \n",
            "2             78.7           0.0         0.0      1  \n",
            "3             78.6           0.0         0.0      1  \n",
            "4             78.7           0.0         0.0      1  \n",
            "(1701030, 8)\n"
          ]
        }
      ],
      "source": [
        "\n",
        "df_combined = pd.concat([df_abnormal, df_normal], ignore_index=True)\n",
        "print(df_combined.head())\n",
        "\n",
        "print(df_combined.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5c26511d-c5a2-40b6-8d8d-185cdfe899c3",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 883
        },
        "id": "5c26511d-c5a2-40b6-8d8d-185cdfe899c3",
        "outputId": "5cecd8c2-f689-4ec3-efc1-96b249292166"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"sns.boxplot(x='label', y='Vasto Medial', data=df_combined)\\nplt.title('Boxplot of Vasto Medial vs Label')\\nplt.show()\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "plt.figure(figsize=(6, 4))\n",
        "\n",
        "sns.boxplot(x='label', y='Recto Femoral', data=df_combined)\n",
        "plt.title('Boxplot of Recto Femoral vs Label')\n",
        "plt.show()\n",
        "\n",
        "sns.boxplot(x='label', y='Biceps Femoral', data=df_combined)\n",
        "plt.title('Boxplot of Biceps Femoral vs Label')\n",
        "plt.show()\n",
        "'''sns.boxplot(x='label', y='Vasto Medial', data=df_combined)\n",
        "plt.title('Boxplot of Vasto Medial vs Label')\n",
        "plt.show()'''"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "79b08257-e2ca-4e45-99e8-b64864ea70d0",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 669
        },
        "id": "79b08257-e2ca-4e45-99e8-b64864ea70d0",
        "outputId": "f0a84a0b-7663-4c60-cdb9-56f75e530e9d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Selecting only the numerical columns for the correlation matrix\n",
        "numerical_columns = ['Recto Femoral', 'Biceps Femoral', 'Vasto Medial', 'EMG Semitendinoso', 'Flexo-Extension']\n",
        "\n",
        "# Calculate the correlation matrix\n",
        "correlation_matrix = df_combined[numerical_columns].corr()\n",
        "\n",
        "# Create the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\n",
        "\n",
        "# Show the plot\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5b667556-15cb-4f1e-8a0e-c109cf9624cf",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5b667556-15cb-4f1e-8a0e-c109cf9624cf",
        "outputId": "f1376f11-bfa1-463a-f0cc-90b12c8c32be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
            "0        -0.0008         -0.0015       -0.0008            -0.0015   \n",
            "1         0.0007         -0.0015       -0.0008            -0.0008   \n",
            "2        -0.0008          0.0000       -0.0030             0.0007   \n",
            "3         0.0000          0.0000       -0.0008            -0.0008   \n",
            "4        -0.0015          0.0000        0.0007            -0.0015   \n",
            "\n",
            "   Flexo-Extension  Vasto Medial  Unnamed: 5  label  \n",
            "0             78.7           0.0         0.0      1  \n",
            "1             78.5           0.0         0.0      1  \n",
            "2             78.7           0.0         0.0      1  \n",
            "3             78.6           0.0         0.0      1  \n",
            "4             78.7           0.0         0.0      1  \n",
            "Shape of the combined dataset: (1701030, 8)\n"
          ]
        }
      ],
      "source": [
        "df_combined = pd.concat([df_abnormal, df_normal], ignore_index=True)\n",
        "print(df_combined.head())\n",
        "output_combined_file = r\"/content/drive/My Drive/archive (4)/Merged_Combined.csv\"\n",
        "df_combined.to_csv(output_combined_file, index=False)\n",
        "print(f\"Shape of the combined dataset: {df_combined.shape}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5ca3665c-1059-40d7-b953-348e5edbe95b",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5ca3665c-1059-40d7-b953-348e5edbe95b",
        "outputId": "25765238-34a5-4292-a4d5-32ebd5b3899e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Recto Femoral', 'Biceps Femoral', 'Vasto Medial', 'EMG Semitendinoso',\n",
            "       'Flexo-Extension', 'Unnamed: 5', 'label'],\n",
            "      dtype='object')\n"
          ]
        }
      ],
      "source": [
        "df_combined.columns = [\n",
        "    \"Recto Femoral\", \"Biceps Femoral\", \"Vasto Medial_1\",\n",
        "    \"EMG Semitendinoso\", \"Flexo-Extension\", \"Unnamed: 5\", \"Vasto Medial_2\", \"label\"\n",
        "]\n",
        "df_combined = df_combined.drop(columns=[\"Vasto Medial_2\"])\n",
        "\n",
        "df_combined = df_combined.rename(columns={\"Vasto Medial_1\": \"Vasto Medial\"})\n",
        "print(df_combined.columns)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "dd41fb42-d210-4f48-9f42-1993028e6193",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dd41fb42-d210-4f48-9f42-1993028e6193",
        "outputId": "83262723-ebf4-49c6-c741-0e9355c4cd44"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "label\n",
            "1    850515\n",
            "0    850515\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "label_counts = df_combined['label'].value_counts()\n",
        "print(label_counts)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8a268b2b-a3a1-4baf-b48c-9db5af4628d4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8a268b2b-a3a1-4baf-b48c-9db5af4628d4",
        "outputId": "1b7e08b1-16a6-4f07-e0bf-65a3d72fb7bb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Recto Femoral        0\n",
            "Biceps Femoral       0\n",
            "Vasto Medial         0\n",
            "EMG Semitendinoso    0\n",
            "Flexo-Extension      0\n",
            "Unnamed: 5           0\n",
            "label                0\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "null_values = df_combined.isna().sum()\n",
        "print(null_values)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "24ae6573-ba11-4291-85a4-52e7cc7bda8c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "24ae6573-ba11-4291-85a4-52e7cc7bda8c",
        "outputId": "45a38b59-5f67-481d-b242-dcea11dccf78"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1701030 entries, 0 to 1701029\n",
            "Data columns (total 7 columns):\n",
            " #   Column             Dtype  \n",
            "---  ------             -----  \n",
            " 0   Recto Femoral      float64\n",
            " 1   Biceps Femoral     float64\n",
            " 2   Vasto Medial       float64\n",
            " 3   EMG Semitendinoso  float64\n",
            " 4   Flexo-Extension    float64\n",
            " 5   Unnamed: 5         float64\n",
            " 6   label              int64  \n",
            "dtypes: float64(6), int64(1)\n",
            "memory usage: 90.8 MB\n"
          ]
        }
      ],
      "source": [
        "df_combined.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "81b0e05f-5286-43a0-b677-ac48746ac888",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "81b0e05f-5286-43a0-b677-ac48746ac888",
        "outputId": "0aae21d9-0640-4cdd-cdde-6109edafed40"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
              "count   1.701030e+06    1.701030e+06  1.701030e+06       1.701030e+06   \n",
              "mean   -4.053418e-04   -2.935730e-04  1.027192e-03      -9.214358e-05   \n",
              "std     6.131444e-02    3.508773e-02  5.855674e-02       4.963321e-02   \n",
              "min    -1.557800e+00   -8.475000e-01 -1.831500e+00      -1.319300e+00   \n",
              "25%    -6.800000e-03   -5.300000e-03 -4.600000e-03      -6.000000e-03   \n",
              "50%    -8.000000e-04    0.000000e+00  0.000000e+00       0.000000e+00   \n",
              "75%     6.000000e-03    5.200000e-03  6.000000e-03       6.700000e-03   \n",
              "max     1.506000e+00    7.395000e-01  1.476700e+00       1.719000e+00   \n",
              "\n",
              "       Flexo-Extension    Unnamed: 5      label  \n",
              "count     1.701030e+06  1.701030e+06  1701030.0  \n",
              "mean      2.219730e+01 -5.208045e-05        0.5  \n",
              "std       4.215150e+01  4.430047e-02        0.5  \n",
              "min      -1.133000e+02 -1.270500e+00        0.0  \n",
              "25%       1.500000e+00  0.000000e+00        0.0  \n",
              "50%       1.030000e+01  0.000000e+00        0.5  \n",
              "75%       5.190000e+01  0.000000e+00        1.0  \n",
              "max       1.129000e+02  1.825500e+00        1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f576fcac-ab67-4523-a0df-1873f38a3f76\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recto Femoral</th>\n",
              "      <th>Biceps Femoral</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>EMG Semitendinoso</th>\n",
              "      <th>Flexo-Extension</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1.701030e+06</td>\n",
              "      <td>1701030.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>-4.053418e-04</td>\n",
              "      <td>-2.935730e-04</td>\n",
              "      <td>1.027192e-03</td>\n",
              "      <td>-9.214358e-05</td>\n",
              "      <td>2.219730e+01</td>\n",
              "      <td>-5.208045e-05</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.131444e-02</td>\n",
              "      <td>3.508773e-02</td>\n",
              "      <td>5.855674e-02</td>\n",
              "      <td>4.963321e-02</td>\n",
              "      <td>4.215150e+01</td>\n",
              "      <td>4.430047e-02</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-1.557800e+00</td>\n",
              "      <td>-8.475000e-01</td>\n",
              "      <td>-1.831500e+00</td>\n",
              "      <td>-1.319300e+00</td>\n",
              "      <td>-1.133000e+02</td>\n",
              "      <td>-1.270500e+00</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-6.800000e-03</td>\n",
              "      <td>-5.300000e-03</td>\n",
              "      <td>-4.600000e-03</td>\n",
              "      <td>-6.000000e-03</td>\n",
              "      <td>1.500000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>-8.000000e-04</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.030000e+01</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.000000e-03</td>\n",
              "      <td>5.200000e-03</td>\n",
              "      <td>6.000000e-03</td>\n",
              "      <td>6.700000e-03</td>\n",
              "      <td>5.190000e+01</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.506000e+00</td>\n",
              "      <td>7.395000e-01</td>\n",
              "      <td>1.476700e+00</td>\n",
              "      <td>1.719000e+00</td>\n",
              "      <td>1.129000e+02</td>\n",
              "      <td>1.825500e+00</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f576fcac-ab67-4523-a0df-1873f38a3f76')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f576fcac-ab67-4523-a0df-1873f38a3f76 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f576fcac-ab67-4523-a0df-1873f38a3f76');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-287a3f80-805b-439e-8ba6-39c7c5ca8a94\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-287a3f80-805b-439e-8ba6-39c7c5ca8a94')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-287a3f80-805b-439e-8ba6-39c7c5ca8a94 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df_combined\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Recto Femoral\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.923622168,\n        \"min\": -1.5578,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.0004053418223076605,\n          -0.0008,\n          1701030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Biceps Femoral\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.9277035312,\n        \"min\": -0.8475,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.0002935729528579743,\n          0.0,\n          1701030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vasto Medial\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.9388414852,\n        \"min\": -1.8315,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.0010271922305897005,\n          0.0,\n          1701030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMG Semitendinoso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.9012759752,\n        \"min\": -1.3193,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -9.214358359346983e-05,\n          0.0,\n          1701030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Flexo-Extension\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601398.4801275264,\n        \"min\": -113.3,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          22.19729516822161,\n          10.3,\n          1701030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.8937348439,\n        \"min\": -1.2705,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1701030.0,\n          -5.208044537721264e-05,\n          1.8255\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 601404.7472242925,\n        \"min\": 0.0,\n        \"max\": 1701030.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5,\n          1.0,\n          0.500000146969842\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "df_combined.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2fc3481e-8f2e-46bf-b4d9-e817af3f47f3",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 618
        },
        "id": "2fc3481e-8f2e-46bf-b4d9-e817af3f47f3",
        "outputId": "025a429a-50ee-4e77-b2de-3f72f866fe1f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x800 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "signal_columns = [\n",
        "    \"Recto Femoral\", \"Biceps Femoral\", \"Vasto Medial\",\n",
        "    \"EMG Semitendinoso\", \"Flexo-Extension\"\n",
        "]\n",
        "plt.figure(figsize=(15, 8))\n",
        "\n",
        "for i, column in enumerate(signal_columns, 1):\n",
        "    plt.subplot(2, 3, i)\n",
        "    plt.hist(df_combined[column], bins=50, alpha=0.7, color='blue', edgecolor='black')\n",
        "    plt.title(f\"Frequency Distribution: {column}\")\n",
        "    plt.xlabel(\"Signal Value\")\n",
        "    plt.ylabel(\"Frequency\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "855d0e06-7c74-43c3-812f-84c2604a5454",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "855d0e06-7c74-43c3-812f-84c2604a5454",
        "outputId": "2d3d3142-40de-444a-e084-c3430ee593bd"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x500 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "signal_columns = [\n",
        "    \"Recto Femoral\", \"Biceps Femoral\", \"Vasto Medial\",\n",
        "    \"EMG Semitendinoso\", \"Flexo-Extension\"\n",
        "]\n",
        "colors = ['lightblue', 'lightgreen', 'lightcoral', 'lightsalmon', 'plum']\n",
        "plt.figure(figsize=(6, 5))\n",
        "\n",
        "for i, (column, color) in enumerate(zip(signal_columns, colors), 1):\n",
        "    plt.subplot(2, 3, i)\n",
        "    plt.plot(df_combined.index, df_combined[column], color=color, linewidth=0.8)\n",
        "    plt.title(f\"Waveform: {column}\")\n",
        "    plt.xlabel(\"Index (Time)\")\n",
        "    plt.ylabel(\"Signal Value\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f990728f-6e2b-4e23-955e-68bf9bcffc5e",
      "metadata": {
        "id": "f990728f-6e2b-4e23-955e-68bf9bcffc5e"
      },
      "source": [
        "# FEATURE EXTRACTION"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "23ab0e35-3c53-4c65-a0d3-6cca64e7e3e7",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "23ab0e35-3c53-4c65-a0d3-6cca64e7e3e7",
        "outputId": "0b3917a4-9c34-4df2-f4ed-328fe88c5f1e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Recto Femoral_mean_magnitude  Recto Femoral_max_magnitude  \\\n",
            "0                        0.0008                       0.0008   \n",
            "1                        0.0007                       0.0007   \n",
            "2                        0.0008                       0.0008   \n",
            "3                        0.0000                       0.0000   \n",
            "4                        0.0015                       0.0015   \n",
            "\n",
            "   Recto Femoral_sum_magnitude  Recto Femoral_dominant_frequency  \\\n",
            "0                       0.0008                                 0   \n",
            "1                       0.0007                                 0   \n",
            "2                       0.0008                                 0   \n",
            "3                       0.0000                                 0   \n",
            "4                       0.0015                                 0   \n",
            "\n",
            "   Biceps Femoral_mean_magnitude  Biceps Femoral_max_magnitude  \\\n",
            "0                         0.0015                        0.0015   \n",
            "1                         0.0015                        0.0015   \n",
            "2                         0.0000                        0.0000   \n",
            "3                         0.0000                        0.0000   \n",
            "4                         0.0000                        0.0000   \n",
            "\n",
            "   Biceps Femoral_sum_magnitude  Biceps Femoral_dominant_frequency  \\\n",
            "0                        0.0015                                  0   \n",
            "1                        0.0015                                  0   \n",
            "2                        0.0000                                  0   \n",
            "3                        0.0000                                  0   \n",
            "4                        0.0000                                  0   \n",
            "\n",
            "   Vasto Medial_mean_magnitude  Vasto Medial_max_magnitude  \\\n",
            "0                       0.0008                      0.0008   \n",
            "1                       0.0008                      0.0008   \n",
            "2                       0.0030                      0.0030   \n",
            "3                       0.0008                      0.0008   \n",
            "4                       0.0007                      0.0007   \n",
            "\n",
            "   Vasto Medial_sum_magnitude  Vasto Medial_dominant_frequency  \\\n",
            "0                      0.0008                                0   \n",
            "1                      0.0008                                0   \n",
            "2                      0.0030                                0   \n",
            "3                      0.0008                                0   \n",
            "4                      0.0007                                0   \n",
            "\n",
            "   EMG Semitendinoso_mean_magnitude  EMG Semitendinoso_max_magnitude  \\\n",
            "0                            0.0015                           0.0015   \n",
            "1                            0.0008                           0.0008   \n",
            "2                            0.0007                           0.0007   \n",
            "3                            0.0008                           0.0008   \n",
            "4                            0.0015                           0.0015   \n",
            "\n",
            "   EMG Semitendinoso_sum_magnitude  EMG Semitendinoso_dominant_frequency  \\\n",
            "0                           0.0015                                     0   \n",
            "1                           0.0008                                     0   \n",
            "2                           0.0007                                     0   \n",
            "3                           0.0008                                     0   \n",
            "4                           0.0015                                     0   \n",
            "\n",
            "   Flexo-Extension_mean_magnitude  Flexo-Extension_max_magnitude  \\\n",
            "0                            78.7                           78.7   \n",
            "1                            78.5                           78.5   \n",
            "2                            78.7                           78.7   \n",
            "3                            78.6                           78.6   \n",
            "4                            78.7                           78.7   \n",
            "\n",
            "   Flexo-Extension_sum_magnitude  Flexo-Extension_dominant_frequency  \n",
            "0                           78.7                                   0  \n",
            "1                           78.5                                   0  \n",
            "2                           78.7                                   0  \n",
            "3                           78.6                                   0  \n",
            "4                           78.7                                   0  \n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "signal_columns = [\n",
        "    \"Recto Femoral\", \"Biceps Femoral\", \"Vasto Medial\",\n",
        "    \"EMG Semitendinoso\", \"Flexo-Extension\"\n",
        "]\n",
        "\n",
        "fft_features_rows = []\n",
        "for index, row in df_combined.iterrows():\n",
        "    row_features = {}\n",
        "    for column in signal_columns:\n",
        "        fft_values = np.fft.fft([row[column]])\n",
        "        magnitudes = np.abs(fft_values)\n",
        "        row_features[f\"{column}_mean_magnitude\"] = np.mean(magnitudes)\n",
        "        row_features[f\"{column}_max_magnitude\"] = np.max(magnitudes)\n",
        "        row_features[f\"{column}_sum_magnitude\"] = np.sum(magnitudes)\n",
        "        row_features[f\"{column}_dominant_frequency\"] = np.argmax(magnitudes)  # Index of the max magnitude\n",
        "\n",
        "    fft_features_rows.append(row_features)\n",
        "\n",
        "fft_features_df_per_row = pd.DataFrame(fft_features_rows)\n",
        "\n",
        "print(fft_features_df_per_row.head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "72a23759-681f-467e-ab64-3a35bbd11c9d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 783
        },
        "id": "72a23759-681f-467e-ab64-3a35bbd11c9d",
        "outputId": "ef2a930b-42bd-401b-c82c-82dbafbb7743"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "signal_columns = [\n",
        "    \"Recto Femoral\", \"Biceps Femoral\", \"Vasto Medial\",\n",
        "    \"EMG Semitendinoso\"\n",
        "]\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "for i, column in enumerate(signal_columns, 1):\n",
        "    # Compute FFT for the signal\n",
        "    fft_values = np.fft.fft(df_combined[column])\n",
        "    magnitudes = np.abs(fft_values)\n",
        "    sampling_rate = 1\n",
        "    freqs = np.fft.fftfreq(len(df_combined[column]), d=sampling_rate)\n",
        "    positive_freqs = freqs[:len(freqs) // 2]\n",
        "    positive_magnitudes = magnitudes[:len(magnitudes) // 2]\n",
        "    plt.subplot(2, 3, i)\n",
        "    plt.plot(positive_freqs, positive_magnitudes, color='blue')\n",
        "    plt.title(f\"FFT Frequency Spectrum: {column}\")\n",
        "    plt.xlabel(\"Frequency (Hz)\")\n",
        "    plt.ylabel(\"Magnitude\")\n",
        "    plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "7543a13c-fbfa-43de-9982-473bdfdb078c",
      "metadata": {
        "id": "7543a13c-fbfa-43de-9982-473bdfdb078c"
      },
      "source": [
        "SPLIT THE DATASET"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a063b76f-0dee-4484-a600-202cebfe3d5c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a063b76f-0dee-4484-a600-202cebfe3d5c",
        "outputId": "7caa4acc-2159-4b0f-8111-bb5b78837b1a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training data shape: X_train: (1360824, 26), y_train: (1360824,)\n",
            "Test data shape: X_test: (340206, 26), y_test: (340206,)\n"
          ]
        }
      ],
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "df_final = pd.concat([df_combined, fft_features_df_per_row], axis=1)\n",
        "X = df_final.drop(columns=[\"label\"])\n",
        "y = df_final[\"label\"]\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "print(f\"Training data shape: X_train: {X_train.shape}, y_train: {y_train.shape}\")\n",
        "print(f\"Test data shape: X_test: {X_test.shape}, y_test: {y_test.shape}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3aefdf54-a65a-4c3e-bd8e-07aef784760d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "3aefdf54-a65a-4c3e-bd8e-07aef784760d",
        "outputId": "3cea12cf-2fef-4193-d9e2-7743d312cd0d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Recto Femoral  Biceps Femoral  Vasto Medial  EMG Semitendinoso  \\\n",
              "1576626         0.0000          0.0007       -0.0008             0.0000   \n",
              "983265         -0.0015         -0.0030        0.0292            -0.0030   \n",
              "203070          0.0052         -0.0068        0.0000            -0.0060   \n",
              "1320249        -0.0008          0.0015        0.0030            -0.0053   \n",
              "1681340        -0.0015         -0.0038       -0.0030            -0.0075   \n",
              "\n",
              "         Flexo-Extension  Unnamed: 5  Recto Femoral_mean_magnitude  \\\n",
              "1576626             74.9      0.0000                        0.0000   \n",
              "983265              10.8      0.0000                        0.0015   \n",
              "203070               1.4     -0.2273                        0.0052   \n",
              "1320249             64.2      0.0000                        0.0008   \n",
              "1681340            -80.0      0.0000                        0.0015   \n",
              "\n",
              "         Recto Femoral_max_magnitude  Recto Femoral_sum_magnitude  \\\n",
              "1576626                       0.0000                       0.0000   \n",
              "983265                        0.0015                       0.0015   \n",
              "203070                        0.0052                       0.0052   \n",
              "1320249                       0.0008                       0.0008   \n",
              "1681340                       0.0015                       0.0015   \n",
              "\n",
              "         Recto Femoral_dominant_frequency  ...  Vasto Medial_sum_magnitude  \\\n",
              "1576626                                 0  ...                      0.0008   \n",
              "983265                                  0  ...                      0.0292   \n",
              "203070                                  0  ...                      0.0000   \n",
              "1320249                                 0  ...                      0.0030   \n",
              "1681340                                 0  ...                      0.0030   \n",
              "\n",
              "         Vasto Medial_dominant_frequency  EMG Semitendinoso_mean_magnitude  \\\n",
              "1576626                                0                            0.0000   \n",
              "983265                                 0                            0.0030   \n",
              "203070                                 0                            0.0060   \n",
              "1320249                                0                            0.0053   \n",
              "1681340                                0                            0.0075   \n",
              "\n",
              "         EMG Semitendinoso_max_magnitude  EMG Semitendinoso_sum_magnitude  \\\n",
              "1576626                           0.0000                           0.0000   \n",
              "983265                            0.0030                           0.0030   \n",
              "203070                            0.0060                           0.0060   \n",
              "1320249                           0.0053                           0.0053   \n",
              "1681340                           0.0075                           0.0075   \n",
              "\n",
              "         EMG Semitendinoso_dominant_frequency  Flexo-Extension_mean_magnitude  \\\n",
              "1576626                                     0                            74.9   \n",
              "983265                                      0                            10.8   \n",
              "203070                                      0                             1.4   \n",
              "1320249                                     0                            64.2   \n",
              "1681340                                     0                            80.0   \n",
              "\n",
              "         Flexo-Extension_max_magnitude  Flexo-Extension_sum_magnitude  \\\n",
              "1576626                           74.9                           74.9   \n",
              "983265                            10.8                           10.8   \n",
              "203070                             1.4                            1.4   \n",
              "1320249                           64.2                           64.2   \n",
              "1681340                           80.0                           80.0   \n",
              "\n",
              "         Flexo-Extension_dominant_frequency  \n",
              "1576626                                   0  \n",
              "983265                                    0  \n",
              "203070                                    0  \n",
              "1320249                                   0  \n",
              "1681340                                   0  \n",
              "\n",
              "[5 rows x 26 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ad8a89d-b049-4de3-9d42-d1b7f62484e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recto Femoral</th>\n",
              "      <th>Biceps Femoral</th>\n",
              "      <th>Vasto Medial</th>\n",
              "      <th>EMG Semitendinoso</th>\n",
              "      <th>Flexo-Extension</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Recto Femoral_mean_magnitude</th>\n",
              "      <th>Recto Femoral_max_magnitude</th>\n",
              "      <th>Recto Femoral_sum_magnitude</th>\n",
              "      <th>Recto Femoral_dominant_frequency</th>\n",
              "      <th>...</th>\n",
              "      <th>Vasto Medial_sum_magnitude</th>\n",
              "      <th>Vasto Medial_dominant_frequency</th>\n",
              "      <th>EMG Semitendinoso_mean_magnitude</th>\n",
              "      <th>EMG Semitendinoso_max_magnitude</th>\n",
              "      <th>EMG Semitendinoso_sum_magnitude</th>\n",
              "      <th>EMG Semitendinoso_dominant_frequency</th>\n",
              "      <th>Flexo-Extension_mean_magnitude</th>\n",
              "      <th>Flexo-Extension_max_magnitude</th>\n",
              "      <th>Flexo-Extension_sum_magnitude</th>\n",
              "      <th>Flexo-Extension_dominant_frequency</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1576626</th>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0007</td>\n",
              "      <td>-0.0008</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>74.9</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0008</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0</td>\n",
              "      <td>74.9</td>\n",
              "      <td>74.9</td>\n",
              "      <td>74.9</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>983265</th>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0030</td>\n",
              "      <td>0.0292</td>\n",
              "      <td>-0.0030</td>\n",
              "      <td>10.8</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0292</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>0</td>\n",
              "      <td>10.8</td>\n",
              "      <td>10.8</td>\n",
              "      <td>10.8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203070</th>\n",
              "      <td>0.0052</td>\n",
              "      <td>-0.0068</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>-0.0060</td>\n",
              "      <td>1.4</td>\n",
              "      <td>-0.2273</td>\n",
              "      <td>0.0052</td>\n",
              "      <td>0.0052</td>\n",
              "      <td>0.0052</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0060</td>\n",
              "      <td>0.0060</td>\n",
              "      <td>0.0060</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1320249</th>\n",
              "      <td>-0.0008</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>-0.0053</td>\n",
              "      <td>64.2</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0008</td>\n",
              "      <td>0.0008</td>\n",
              "      <td>0.0008</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0053</td>\n",
              "      <td>0.0053</td>\n",
              "      <td>0.0053</td>\n",
              "      <td>0</td>\n",
              "      <td>64.2</td>\n",
              "      <td>64.2</td>\n",
              "      <td>64.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1681340</th>\n",
              "      <td>-0.0015</td>\n",
              "      <td>-0.0038</td>\n",
              "      <td>-0.0030</td>\n",
              "      <td>-0.0075</td>\n",
              "      <td>-80.0</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0.0015</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0030</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0075</td>\n",
              "      <td>0.0075</td>\n",
              "      <td>0.0075</td>\n",
              "      <td>0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 26 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ad8a89d-b049-4de3-9d42-d1b7f62484e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2ad8a89d-b049-4de3-9d42-d1b7f62484e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2ad8a89d-b049-4de3-9d42-d1b7f62484e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b94a9a5a-187b-41e2-b6e3-b7cf212f42ab\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b94a9a5a-187b-41e2-b6e3-b7cf212f42ab')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b94a9a5a-187b-41e2-b6e3-b7cf212f42ab button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_train"
            }
          },
          "metadata": {},
          "execution_count": 36
        }
      ],
      "source": [
        "X_train.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "33170453-6a67-4716-9901-02c68f984c19",
      "metadata": {
        "id": "33170453-6a67-4716-9901-02c68f984c19"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.7"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}